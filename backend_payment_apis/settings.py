"""
Django settings for backend_payment_apis project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
import json
import tempfile
import dj_database_url
from pathlib import Path
from dotenv import load_dotenv

from drf_yasg.views import get_schema_view
from drf_yasg import openapi

load_dotenv()

# intasend configuration
INTASEND_API_KEY = os.getenv('INTASEND_PUBLIC_API_KEY')
INTASEND_PRIVATE_KEY = os.getenv('INTASEND_SECRET_PRIVATE_KEY')
INTASEND_MODE = os.getenv('INTASEND_MODE', 'sandbox')
# FIREBASE_CREDENTIAL_PATH = os.getenv("/home/ow3nso/projects/LUKHU_MAIN/backend/backend_payment_apis/backend_payment_apis/lukhu-dev-firebase-adminsdk-30g1w-114a786b55.json")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Firebase
# FIREBASE_AUTH = {
#     "SERVICE_ACCOUNT_KEY": os.path.join(BASE_DIR, "backend_payment_apis/lukhu-dev-firebase-adminsdk-30g1w-114a786b55.json"),
# }

# FIREBASE_AUTH = os.getenv("FIREBASE_SERVICE_ACCOUNT_KEY", "")

# FIREBASE_SERVICE_ACCOUNT_KEY_CONTENT = os.getenv("FIREBASE_SERVICE_ACCOUNT_KEY")

# if FIREBASE_SERVICE_ACCOUNT_KEY_CONTENT:
#     try:
#         FIREBASE_AUTH = {
#             "SERVICE_ACCOUNT_KEY": json.loads(FIREBASE_SERVICE_ACCOUNT_KEY_CONTENT)
#         }
#     except json.JSONDecodeError as e:
#         raise ValueError(f"Invalid JSON content in FIREBASE_SERVICE_ACCOUNT_KEY: {e}")
# else:
#     raise ValueError("Firebase service account key is missing. Check your environment variables.")


# Firestore
FIRESTORE_PROJECT_ID = "lukhu-dev"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-h4st2wu*%jb)zutviv^9zqcuhxypy$z@mb=)m_unt2x&5ary81"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "rest_framework",
    "corsheaders",
    "payments",
    'django_celery_beat',
    'drf_yasg',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",

    'backend_payment_apis.middleware.firebase_middleware.FirebaseAuthMiddleware',
]

CORS_ALLOW_HEADERS = (
    "accept",
    "authorization",
    "content-type",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
)

CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8000",
    "http://192.168.136.130:8000",
    "http://127.0.0.1:5500",  # Add your actual frontend domain when deploying
]

CORS_ALLOW_ALL_ORIGINS = False

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

ROOT_URLCONF = "backend_payment_apis.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend_payment_apis.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

DATABASES = {
    "default":dj_database_url.parse(os.getenv("DATABASE_URL"))
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

schema_view = get_schema_view(
    openapi.Info(
        title="Dukastax API",
        default_version='v1',
        description="API documentation with JWT authentication",
    ),
    public=True,
    authentication_classes=[],  # Add your authentication classes here if necessary
    permission_classes=[],  # Add your permission classes here
)

swagger_settings = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization',
            'description': 'JWT Authorization header using the Bearer scheme. Example: "Authorization: Bearer {token}"',
        },
    },
    'DEFAULT_SECURITY': [{'Bearer': []}],
}


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# settings.py

CELERY_BROKER_URL = 'amqps://pzryhtak:7Cml_DxOvhrKrO6MmRG55-2slKVOOmk8@chimpanzee.rmq.cloudamqp.com/pzryhtak'
# CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
